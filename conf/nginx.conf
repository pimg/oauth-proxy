worker_processes  1;
error_log logs/error.log notice;
env AUTHORIZATION_URL;
env CLIENT_ID;
env CLIENT_SECRET;
env UPSTREAM_URL;

events {
    worker_connections 1024;
}
http {
    resolver 8.8.8.8;
    server_tokens off;
    lua_package_path "$prefix/resty_modules/lualib/?.lua;;";
    lua_package_cpath "$prefix/resty_modules/lualib/?.so;;";
        server {
            set_by_lua $upstream_url 'return os.getenv("UPSTREAM_URL") or "https://echo-api.3scale.net"';
            set_by_lua $authorization_url 'return os.getenv("AUTHORIZATION_URL") or "http://127.0.0.1:9999/token"';
            set_by_lua $client_id 'return os.getenv("CLIENT_ID") or "pim"';
            set_by_lua $client_secret 'return os.getenv("CLIENT_SECRET") or mysecret';
            listen 8080;
            location /_healtz {
                default_type text/plain;
                content_by_lua_file 'src/health.lua';
            }

            location /token {
                default_type text/plain;
                access_by_lua_block {
                    local authentication = require("authentication")
                    local token = authentication.authenticate()
                    -- ngx.say(token)
                }
                
                proxy_pass ${upstream_url};
            }
        }
    }